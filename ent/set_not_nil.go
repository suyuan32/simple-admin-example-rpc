// Code generated by ent, DO NOT EDIT.

package ent

import "time"

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilUpdatedAt(value *time.Time) *StudentUpdate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilUpdatedAt(value *time.Time) *StudentUpdateOne {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilUpdatedAt(value *time.Time) *StudentCreate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilStatus(value *uint8) *StudentUpdate {
	if value != nil {
		return s.SetStatus(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilStatus(value *uint8) *StudentUpdateOne {
	if value != nil {
		return s.SetStatus(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilStatus(value *uint8) *StudentCreate {
	if value != nil {
		return s.SetStatus(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilName(value *string) *StudentUpdate {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilName(value *string) *StudentUpdateOne {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilName(value *string) *StudentCreate {
	if value != nil {
		return s.SetName(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilAge(value *int16) *StudentUpdate {
	if value != nil {
		return s.SetAge(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilAge(value *int16) *StudentUpdateOne {
	if value != nil {
		return s.SetAge(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilAge(value *int16) *StudentCreate {
	if value != nil {
		return s.SetAge(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilAddress(value *string) *StudentUpdate {
	if value != nil {
		return s.SetAddress(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilAddress(value *string) *StudentUpdateOne {
	if value != nil {
		return s.SetAddress(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilAddress(value *string) *StudentCreate {
	if value != nil {
		return s.SetAddress(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilScore(value *int32) *StudentUpdate {
	if value != nil {
		return s.SetScore(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilScore(value *int32) *StudentUpdateOne {
	if value != nil {
		return s.SetScore(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilScore(value *int32) *StudentCreate {
	if value != nil {
		return s.SetScore(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilWeight(value *uint32) *StudentUpdate {
	if value != nil {
		return s.SetWeight(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilWeight(value *uint32) *StudentUpdateOne {
	if value != nil {
		return s.SetWeight(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilWeight(value *uint32) *StudentCreate {
	if value != nil {
		return s.SetWeight(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilHealthy(value *bool) *StudentUpdate {
	if value != nil {
		return s.SetHealthy(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilHealthy(value *bool) *StudentUpdateOne {
	if value != nil {
		return s.SetHealthy(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilHealthy(value *bool) *StudentCreate {
	if value != nil {
		return s.SetHealthy(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdate) SetNotNilCode(value *int64) *StudentUpdate {
	if value != nil {
		return s.SetCode(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentUpdateOne) SetNotNilCode(value *int64) *StudentUpdateOne {
	if value != nil {
		return s.SetCode(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *StudentCreate) SetNotNilCode(value *int64) *StudentCreate {
	if value != nil {
		return s.SetCode(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (t *TeacherUpdate) SetNotNilUpdatedAt(value *time.Time) *TeacherUpdate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherUpdateOne) SetNotNilUpdatedAt(value *time.Time) *TeacherUpdateOne {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherCreate) SetNotNilUpdatedAt(value *time.Time) *TeacherCreate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherUpdate) SetNotNilName(value *string) *TeacherUpdate {
	if value != nil {
		return t.SetName(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherUpdateOne) SetNotNilName(value *string) *TeacherUpdateOne {
	if value != nil {
		return t.SetName(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherCreate) SetNotNilName(value *string) *TeacherCreate {
	if value != nil {
		return t.SetName(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherUpdate) SetNotNilAge(value *int16) *TeacherUpdate {
	if value != nil {
		return t.SetAge(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherUpdateOne) SetNotNilAge(value *int16) *TeacherUpdateOne {
	if value != nil {
		return t.SetAge(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TeacherCreate) SetNotNilAge(value *int16) *TeacherCreate {
	if value != nil {
		return t.SetAge(*value)
	}
	return t
}
